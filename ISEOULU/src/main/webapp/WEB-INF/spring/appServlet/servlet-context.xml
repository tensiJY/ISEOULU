<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/mvc 
		http://www.springframework.org/schema/mvc/spring-mvc.xsd">
		
	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />
   
    <mvc:interceptors>
		<mvc:interceptor>
			<!-- 	인터셉터될 요청 내용을 등록하는 부분 -->
			<mvc:mapping path="/Board/**"/>
			<!-- 	위의 등록한 내용을 보면 /FileBoard/로 시작하는 모든 요청은 인터셉터를 타도록 되어있다.
					하지만 이 요청에서 인터셉터 처리를 제외하고 싶은 경우가 있을 것이다.
					
					인터셉터 제외 등록하는 방법
			
					<mvc:exclude-mapping path="/FileBoard/BordList.sun" />
					<mvc:exclude-mapping path="/AnBoard/BordList.sun" />
					
					위의 방식은 스프링 버전 3.2 부터 처리되도록 되어있다.
					
					이런경우에는 JSP시간에 배웠던 요청 내용 분석을 이용해서
					강제 처리를 해주어야 한다.
			-->
			<!-- 	인터셉터 된 후 먼저 실행할 인터셉터 클래스를 등록하는 부분이다. -->
			<beans:bean id="myInterceptor" class="com.seoul.Util.InterceptorUtil"></beans:bean>
		</mvc:interceptor>
	</mvc:interceptors>
	
   
	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	
	<resources mapping="/resources/**" location="/resources/" />
	<resources mapping="/css/**" location="/resources/css/" />
	<resources mapping="/js/**" location="/resources/js/" />
	<resources mapping="/images/**" location="/resources/images/" />
	<resources mapping="/fonts/**" location="/resources/fonts/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	
	<!-- 	사용자 뷰를 사용하기 위해서 뷰 등록 -->
	<beans:bean class="org.springframework.web.servlet.view.BeanNameViewResolver">
		<!-- 	여러개의 뷰의 동작 순서를 지정하는 것이다.
				아시다시피 스프링은 컨트롤러에서 반환값이 없어도 뷰를 부르게 된다.
				
				이 경우 어떤 뷰를 먼저 사용할지를 지정하는 부분이다.
				이 부분을 생략하면 order = 1이 지정된다.
				
				여기서는 일반 뷰보다 먼저 사용자 뷰를 선택하도록 하기 위해서
				order 순서를 앞쪽에 놓은 것이다.		
		-->
		<beans:property name="order" value="0"/>
	</beans:bean>
	
	<context:component-scan base-package="com.seoul" />
	
</beans:beans>
